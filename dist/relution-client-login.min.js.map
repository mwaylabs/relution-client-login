{"version":3,"sources":["relutionAuth.js","directives/log-out-button-dir.js","factory/base64.js","providers/relutionauthlauncher-prov.js","services/login-serv.js"],"names":["angular","module","directive","$relutionAuthLauncher","$q","LoginService","template","restrict","link","scope","icon","iconSet","logout","secureLogout","factory","keyStr","encode","input","chr1","chr2","enc1","enc2","enc3","output","chr3","enc4","i","charCodeAt","isNaN","charAt","length","decode","base64test","exec","window","alert","replace","indexOf","String","fromCharCode","provider","this","forwardStateAfterLogin","forwardStateAfterLogout","loginUrl","logoutUrl","icons","android","login","username","password","organization","ios","setIcons","key","ionic","Platform","isAndroid","assign","formViews","PLACEHOLDER_LABELS","INLINE_LABELS","STACKED_LABELS","FLOATING_LABELS","INSET_LABELS","INPUT_ICONS","setLayoutStyle","view","$get","service","$state","Base64","$rootScope","self","userResponse","isLoggedIn","basicAuth","form","value","globals","type","required","setUsername","setPassword","clearCredentials","jQuery","ajaxSetup","headers","Authorization","logon","xhrFields","withCredentials","secureLogin","success","resp","go","error","e","console","successLogout","user","log","errorLogout","when","params","userName","ajax","Content-Type","url","data","JSON","stringify","dataType","post"],"mappings":"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","file":"relution-client-login.min.js","sourcesContent":["/**\n * Created by Pascal Brewing\n * Copyright (c)\n * 2015\n * M-Way Solutions GmbH. All rights reserved.\n * http://www.mwaysolutions.com\n * Redistribution and use in source and binary forms, with or without\n * modification, are not permitted.\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n'use strict';\nangular.module('relutionAuth', []);\n","'use strict';\nangular.module('relutionAuth')\n.directive('relutionLogOutButton', [\"$relutionAuthLauncher\", \"$q\", \"LoginService\", function ($relutionAuthLauncher, $q, LoginService) {\n  return {\n    template: '<button ng-click=\"logout();\" class=\"button button-icon icon {{icon}}\"></button>',\n    restrict: 'AEC',\n    link: function postLink (scope) {\n      scope.icon = $relutionAuthLauncher.iconSet.logout;\n      scope.logout = function () {\n        return LoginService.secureLogout();\n      };\n    }\n  };\n}]);\n","/**\n * Created by pascalbrewing on 22/06/15\n * Copyright (c)\n * 2015\n * M-Way Solutions GmbH. All rights reserved.\n * http://www.mwaysolutions.com\n * Redistribution and use in source and binary forms, with or without\n * modification, are not permitted.\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n'use strict';\nangular.module('relutionAuth')\n  .factory('Base64', function () {\n    /* jshint ignore:start */\n    // jscs:disable\n    var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n    return {\n      encode: function (input) {\n        var output = \"\";\n        var chr1, chr2, chr3 = \"\";\n        var enc1, enc2, enc3, enc4 = \"\";\n        var i = 0;\n\n        do {\n          chr1 = input.charCodeAt(i++);\n          chr2 = input.charCodeAt(i++);\n          chr3 = input.charCodeAt(i++);\n\n          enc1 = chr1 >> 2;\n          enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n          enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n          enc4 = chr3 & 63;\n\n          if (isNaN(chr2)) {\n            enc3 = enc4 = 64;\n          } else if (isNaN(chr3)) {\n            enc4 = 64;\n          }\n\n          output = output +\n            keyStr.charAt(enc1) +\n            keyStr.charAt(enc2) +\n            keyStr.charAt(enc3) +\n            keyStr.charAt(enc4);\n          chr1 = chr2 = chr3 = \"\";\n          enc1 = enc2 = enc3 = enc4 = \"\";\n        } while (i < input.length);\n\n        return output;\n      },\n\n      decode: function (input) {\n        var output = \"\";\n        var chr1, chr2, chr3 = \"\";\n        var enc1, enc2, enc3, enc4 = \"\";\n        var i = 0;\n\n        // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n        var base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n        if (base64test.exec(input)) {\n          window.alert(\"There were invalid base64 characters in the input text.\\n\" +\n            \"Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\\n\" +\n            \"Expect errors in decoding.\");\n        }\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        do {\n          enc1 = keyStr.indexOf(input.charAt(i++));\n          enc2 = keyStr.indexOf(input.charAt(i++));\n          enc3 = keyStr.indexOf(input.charAt(i++));\n          enc4 = keyStr.indexOf(input.charAt(i++));\n\n          chr1 = (enc1 << 2) | (enc2 >> 4);\n          chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n          chr3 = ((enc3 & 3) << 6) | enc4;\n\n          output = output + String.fromCharCode(chr1);\n\n          if (enc3 != 64) {\n            output = output + String.fromCharCode(chr2);\n          }\n          if (enc4 != 64) {\n            output = output + String.fromCharCode(chr3);\n          }\n\n          chr1 = chr2 = chr3 = \"\";\n          enc1 = enc2 = enc3 = enc4 = \"\";\n\n        } while (i < input.length);\n\n        return output;\n      }\n    };\n    /* jshint ignore:end */\n    // jscs:enable\n  });\n","/**\n * Created by pascalbrewing on 24/06/15\n * Copyright (c)\n * 2015\n * M-Way Solutions GmbH. All rights reserved.\n * http://www.mwaysolutions.com\n * Redistribution and use in source and binary forms, with or without\n * modification, are not permitted.\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n'use strict';\n/**\n * @ngdoc service\n * @name relutionAuth:$relutionAuthLauncher\n * @description Configuration for the relutionAuth module\n */\nangular.module('relutionAuth')\n  .provider('$relutionAuthLauncher', function () {\n    var provider = this;\n    provider.iconSet = null;\n    provider.forwardStateAfterLogin = null;\n    provider.forwardStateAfterLogout = null;\n    provider.loginUrl = null;\n    provider.logoutUrl = null;\n\n    provider.icons =\n    {\n      android: {\n        login: 'ion-log-in',\n        username: 'ion-android-person',\n        password: 'ion-lock-combination',\n        organization: 'ion-briefcase',\n        logout: 'ion-log-out'\n      },\n      ios: {\n        login: 'ion-log-in',\n        username: 'ion-ios-person',\n        password: 'ion-lock-combination',\n        organization: 'ion-briefcase',\n        logout: 'ion-log-out'\n      }\n    };\n\n    provider.setIcons = function (key, icons) {\n      provider.iconSet = ionic.Platform.isAndroid() ? provider.icons.android : provider.icons.ios;\n      if (!key && !icons) {\n        return provider.iconSet;\n      }\n      if (key) {\n        provider.iconSet = provider.icons[key];\n        if (icons) {\n          return provider.iconSet.assign(icons);\n        }\n      }\n    };\n\n    provider.formViews = {\n      PLACEHOLDER_LABELS: 'placeholder_label.html',\n      INLINE_LABELS: 'inline_labels.html',\n      STACKED_LABELS: 'stacked_label.html',\n      FLOATING_LABELS: 'floating_labels.html',\n      INSET_LABELS: 'inset_labels.html',\n      INPUT_ICONS: 'input_icons.html'\n    };\n    provider.setLayoutStyle = function (key) {\n      if (!key) {\n        provider.setLayoutStyle(provider.formViews.PLACEHOLDER_LABELS);\n      }\n      provider.view = provider.formViews[key];\n    };\n\n    provider.$get = function () {\n      return provider;\n    };\n  });\n","/**\n * Created by Pascal Brewing\n * Copyright (c)\n * 2015\n * M-Way Solutions GmbH. All rights reserved.\n * http://www.mwaysolutions.com\n * Redistribution and use in source and binary forms, with or without\n * modification, are not permitted.\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n'use strict';\n/**\n * @ngdoc service\n * @name relutionAuth:LoginService\n * @requires $q , $state , Base64, $rootScope, $relutionAuthLauncher\n *\n * @description\n * Simple Service to login and logout on relution server and store the result in the  LoginService.userResponse\n * @example\n <example module=\"logInExample\">\n <file name=\"script.js\">\n angular.module('logInExample', ['ionic', 'ui.router'])\n .value('Config', {\n  ENV:{\n    SERVER_URL: '',\n  },\n  CURRENT_AUTHORIZATION_LOGIN: '',\n  CURRENT_AUTHORIZATION_LOGOUT: ''\n })\n .config(function ($stateProvider, $relutionAuthLauncherProvider, Config) {\n    //$relutionAuthLauncherProvider.setLayoutStyle('INPUT_ICONS');\n    //$relutionAuthLauncherProvider.setLayoutStyle('PLACEHOLDER_LABELS');\n    //$relutionAuthLauncherProvider.setLayoutStyle('INLINE_LABELS');\n    //$relutionAuthLauncherProvider.setLayoutStyle('FLOATING_LABELS');\n    //$relutionAuthLauncherProvider.setLayoutStyle('INSET_LABELS');\n    $relutionAuthLauncherProvider.setLayoutStyle('INPUT_ICONS');\n    $relutionAuthLauncherProvider.setIcons();\n    $relutionAuthLauncherProvider.forwardStateAfterLogin = 'tab.messenger';\n    $relutionAuthLauncherProvider.forwardStateAfterLogout = 'auth.login';\n    $relutionAuthLauncherProvider.loginUrl = Config.ENV.SERVER_URL + Config.CURRENT_AUTHORIZATION_LOGIN;\n    $relutionAuthLauncherProvider.logoutUrl = Config.ENV.SERVER_URL + Config.CURRENT_AUTHORIZATION_LOGOUT;\n    $stateProvider\n      .state('auth', {\n        url: '/auth',\n        abstract: true,\n        template: '<ion-nav-view name=\"auth\"></ion-nav-view>'\n      })\n      .state('auth.login', {\n        parent: 'auth',\n        url: '/login',\n        views: {\n          'auth': {\n            templateUrl: 'auth/templates/login/index.html',\n            controller: 'LoginCtrl as loginC'\n          }\n        }\n      });\n  })\n .controller('LoginController', ['$scope', 'LoginService', '$relutionAuthLauncher', function($scope, LoginService, $relutionAuthLauncher) {\n   var self = this;\n   this.submit = function (loginform) {\n      if (loginform.$valid) {\n        this.service.logon();\n      } else {\n        alert('form is not valid');\n      }\n   };\n   $scope.$on('$ionicView.afterEnter', function () {\n      self.icons = $relutionAuthLauncher.iconSet;\n      self.include = $relutionAuthLauncher.view;\n    });\n }]);\n </file>\n <file name=\"index.html\">\n   <ion-view hide-nav-bar=\"true\">\n     <ion-content ng-controller=\"LoginController as loginC\">\n     <div ng-if=\"!loginC.service.isLoggedIn\" ng-include=\"loginC.include\"></div>\n     <ion-list ng-if=\"loginC.service.isLoggedIn\">\n     <ion-item class=\"item-text-wrap\">\n     <p>You are already Logged in!</p>\n     </ion-item>\n     </ion-list>\n     </ion-content>\n   </ion-view>\n </file>\n </example>\n */\nangular.module('relutionAuth')\n  .service('LoginService', [\"$q\", \"$state\", \"Base64\", \"$rootScope\", \"$relutionAuthLauncher\", function LoginService($q, $state, Base64, $rootScope, $relutionAuthLauncher) {\n    var self = this;\n    /**\n     * @ngdoc property\n     * @name userResponse\n     * @description the response user\n     * @propertyOf relutionAuth:LoginService\n     */\n    this.userResponse = null;\n    /**\n     * @ngdoc property\n     * @name isLoggedIn\n     * @description bool if the user is loggedIn\n     * @propertyOf relutionAuth:LoginService\n     */\n    this.isLoggedIn = false;\n    /**\n     * @ngdoc property\n     * @name basicAuth\n     * @description a base64 hash\n     * @propertyOf relutionAuth:LoginService\n     */\n    this.basicAuth = null;\n    /**\n     * @ngdoc property\n     * @name form\n     * @description the form fields\n     * @propertyOf relutionAuth:LoginService\n     */\n    this.form = {\n      username: {\n        value: $rootScope.globals ? $rootScope.globals.username : null,\n        type: 'text',\n        required: true\n      },\n      password: {\n        value: null,\n        type: 'password',\n        required: true\n      }\n    };\n    /**\n     * @ngdoc method\n     * @name setUsername\n     * @description set the username\n     * @methodOf relutionAuth:LoginService\n     */\n    this.setUsername = function (username) {\n      self.form.username.value = username;\n    };\n    /**\n     * @ngdoc method\n     * @name setPassword\n     * @description set the password\n     * @methodOf relutionAuth:LoginService\n     */\n    this.setPassword = function (password) {\n      self.form.password.value = password;\n    };\n    /**\n     * @ngdoc method\n     * @name clearCredentials\n     * @description remove the Basic auth from the Header\n     * @methodOf relutionAuth:LoginService\n     */\n    this.clearCredentials = function () {\n      jQuery.ajaxSetup({\n        headers: {\n          'Authorization': 'Basic '\n        }\n      });\n    };\n    /**\n     * @ngdoc method\n     * @name logon\n     * @description set credentials the use post to connect\n     * @methodOf relutionAuth:LoginService\n     */\n    this.logon = function () {\n      self.basicAuth = Base64.encode(self.form.username.value + ':' + self.form.password.value);\n      jQuery.ajaxSetup({\n        xhrFields: {\n          withCredentials: true//add Cookie JSESSIONID\n        }\n      });\n      return self.secureLogin();\n    };\n    /**\n     * @ngdoc method\n     * @name success\n     * @description login succesfully\n     * @methodOf relutionAuth:LoginService\n     */\n    this.success = function (resp) {\n      self.userResponse = resp;\n      return $state.go($relutionAuthLauncher.forwardStateAfterLogin);\n    };\n    /**\n     * @ngdoc method\n     * @name error\n     * @description login failed\n     * @methodOf relutionAuth:LoginService\n     */\n    this.error = function (e) {\n      return console.error('Login failed', e);\n    };\n    /**\n     * @ngdoc method\n     * @name successLogout\n     * @description logout succesfully\n     * @methodOf relutionAuth:LoginService\n     */\n    this.successLogout = function () {\n      self.user = null;\n      console.log('logged out');\n      return $state.go($relutionAuthLauncher.forwardStateAfterLogout);\n    };\n    /**\n     * @ngdoc method\n     * @name errorLogout\n     * @description logout failed\n     * @methodOf relutionAuth:LoginService\n     */\n    this.errorLogout = function (e) {\n      return console.error('Logout failed', e);\n    };\n    /**\n     * @ngdoc method\n     * @name secureLogin\n     * @description login on Server with Credentials\n     * @methodOf relutionAuth:LoginService\n     */\n    this.secureLogin = function () {\n      if (!$relutionAuthLauncher.loginUrl) {\n        console.error('please configure your loginUrl, $relutionAuthLauncher.loginUrl = secureloginUrl');\n        return $q.when(false);\n      }\n      var params = {\n        userName: self.form.username.value,\n        password: self.form.password.value\n      };\n      return jQuery.ajax({\n        type: 'POST',\n        headers: {\n          'Content-Type': 'application/json'//USE JSON Stadard\n        },\n        url: $relutionAuthLauncher.loginUrl,\n        data: JSON.stringify(params),\n        success: self.success,\n        error: self.error,\n        dataType: 'json'\n      });\n    };\n    /**\n     * @ngdoc method\n     * @name secureLogout\n     * @description logout on Server\n     * @methodOf relutionAuth:LoginService\n     */\n    this.secureLogout = function () {\n      if (!$relutionAuthLauncher.logoutUrl) {\n        console.error('please configure your logoutUrl, $relutionAuthLauncher.logoutUrl = secureloginUrl');\n        return $q.when(false);\n      }\n      return jQuery.post($relutionAuthLauncher.logoutUrl, self.successLogout);\n    };\n  }]\n);\n"],"sourceRoot":"/source/"}