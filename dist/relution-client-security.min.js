"use strict";angular.module("relutionClientSecurity",["ui.router","pascalprecht.translate"]);
"use strict";angular.module("relutionClientSecurity").directive("relutionLogOutButton",["$relutionSecurityConfig","$q","LoginService",function(t,o,n){return{template:'<button ng-click="logout();" class="button button-icon icon {{icon}}"></button>',restrict:"E",link:function(o){o.icon=t.iconSet.logout,o.logout=function(){return n.secureLogout()}}}}]);
"use strict";angular.module("relutionClientSecurity").factory("Base64",function(){var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";return{encode:function(r){var a,t,n,c,i,d="",h="",o="",A=0;do a=r.charCodeAt(A++),t=r.charCodeAt(A++),h=r.charCodeAt(A++),n=a>>2,c=(3&a)<<4|t>>4,i=(15&t)<<2|h>>6,o=63&h,isNaN(t)?i=o=64:isNaN(h)&&(o=64),d=d+e.charAt(n)+e.charAt(c)+e.charAt(i)+e.charAt(o),a=t=h="",n=c=i=o="";while(A<r.length);return d},decode:function(r){var a,t,n,c,i,d="",h="",o="",A=0,l=/[^A-Za-z0-9\+\/\=]/g;l.exec(r)&&window.alert("There were invalid base64 characters in the input text.\nValid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\nExpect errors in decoding."),r=r.replace(/[^A-Za-z0-9\+\/\=]/g,"");do n=e.indexOf(r.charAt(A++)),c=e.indexOf(r.charAt(A++)),i=e.indexOf(r.charAt(A++)),o=e.indexOf(r.charAt(A++)),a=n<<2|c>>4,t=(15&c)<<4|i>>2,h=(3&i)<<6|o,d+=String.fromCharCode(a),64!=i&&(d+=String.fromCharCode(t)),64!=o&&(d+=String.fromCharCode(h)),a=t=h="",n=c=i=o="";while(A<r.length);return d}}});
"use strict";angular.module("relutionClientSecurity").provider("$relutionSecurityConfig",function(){var o=this;o.iconSet=null,o.forwardStateAfterLogin=null,o.forwardStateAfterLogout=null,o.loginUrl=null,o.logoutUrl=null,o.icons={android:{login:"ion-log-in",username:"ion-android-person",password:"ion-lock-combination",organization:"ion-briefcase",logout:"ion-log-out"},ios:{login:"ion-log-in",username:"ion-ios-person",password:"ion-lock-combination",organization:"ion-briefcase",logout:"ion-log-out"}},o.formViews={PLACEHOLDER_LABELS:"placeholder_label.html",INLINE_LABELS:"inline_labels.html",STACKED_LABELS:"stacked_label.html",FLOATING_LABELS:"floating_labels.html",INSET_LABELS:"inset_labels.html",INPUT_ICONS:"input_icons.html"},o.setIcons=function(i,n){return o.iconSet=ionic.Platform.isAndroid()?o.icons.android:o.icons.ios,i||n?i&&(o.iconSet=o.icons[i],n)?o.iconSet.assign(n):void 0:o.iconSet},o.setLayoutStyle=function(i){i||o.setLayoutStyle(o.formViews.PLACEHOLDER_LABELS),o.view=o.formViews[i]},o.$get=function(){return o}});
"use strict";angular.module("relutionClientSecurity").service("HeaderService",["$q",function(e){this.XGoferUser=null,this.XServer=null,this.XRelutionVersion=null,this.init=function(e){this.XGoferUser=e.getResponseHeader("X-Gofer-User"),this.XServer=e.getResponseHeader("X-Server"),this.XRelutionVersion=e.getResponseHeader("X-Relution-Version")},this.reset=function(){this.XGoferUser=null,this.XServer=null,this.XRelutionVersion=null}}]);
"use strict";angular.module("relutionClientSecurity").service("LoginService",["$q","$state","Base64","$rootScope","$relutionSecurityConfig","UserService","HeaderService",function(e,r,o,s,t,n,u){var i=this;this.userResponse=null,this.header=null,this.isLoggedIn=!1,this.basicAuth=null,this.form={username:{value:s.globals?s.globals.username:null,type:"text",required:!0},password:{value:null,type:"password",required:!0}},this.setUsername=function(e){i.form.username.value=e},this.setPassword=function(e){i.form.password.value=e},this.clearCredentials=function(){jQuery.ajaxSetup({headers:{Authorization:"Basic "}})},this.logon=function(){return i.basicAuth=o.encode(i.form.username.value+":"+i.form.password.value),jQuery.ajaxSetup({xhrFields:{withCredentials:!0}}),i.secureLogin()},this.success=function(o){return i.userResponse=o,i.isLoggedIn=!0,e.when(n.init(o)).then(function(){return r.go(t.forwardStateAfterLogin)})},this.complete=function(e,r){return u.init(e),i.header=e.getAllResponseHeaders()},this.error=function(e){return console.error("Login failed",e)},this.successLogout=function(){i.userResponse=null,i.isLoggedIn=!1,e.all([n.reset(),u.reset()]).then(function(){return r.go(t.forwardStateAfterLogout)})},this.errorLogout=function(e){return console.error("Logout failed",e)},this.secureLogin=function(){if(!t.loginUrl)return console.error("please configure your loginUrl, $relutionSecurityConfig.loginUrl = secureloginUrl"),e.when(!1);var r={userName:i.form.username.value,password:i.form.password.value};return jQuery.ajax({type:"POST",headers:{"Content-Type":"application/json","Access-Control-Allow-Origin":"*"},url:t.loginUrl,data:JSON.stringify(r),success:i.success,error:i.error,complete:i.complete,dataType:"json"})},this.secureLogout=function(){return t.logoutUrl?jQuery.post(t.logoutUrl,i.successLogout):(console.error("please configure your logoutUrl, $relutionSecurityConfig.logoutUrl = secureloginUrl"),e.when(!1))}}]);
"use strict";angular.module("relutionClientSecurity").service("UserService",["$q",function(r){var t=this;this.user=null,this.roles=null,this.organization=null;var n=function(r){t.user=r};this.getUser=function(){return this.user};var i=function(r){t.roles=r};this.getRoles=function(){return this.roles};var e=function(r){t.organization=r};this.getOrganization=function(){return this.organization};var o=function(r,n){return t[r][n]?t[r][n]:!1},u=function(r,t){return r[t]?r[t]:!1},s=function(r,t){if(!Array.isArray(t))return console.error("Properties from "+r+"must be a Array");var n=[];return t.forEach(function(t){n.push(o(r,t))}),n};this.getUserProperty=function(r){return o("user",r)},this.getUserProperties=function(r){return s("user",r)},this.getRolesProperty=function(r){var t=[];return this.roles.forEach(function(n){var i={};i[r]=u(n,r),t.push(i)}),t},this.getOrganizationProperty=function(r){return o("organization",r)},this.getOrganizationProperties=function(r){return s("organization",r)},this.init=function(t){return r.all([n(t.user),i(t.roles.roles),e(t.organization)])},this.reset=function(){return r.all([n(null),i(null),e(null)])}}]);
angular.module("relutionClientSecurity").run(["$templateCache",function(n){n.put("floating_labels.html",'<form class="login-list" name="loginform" ng-submit="loginC.submit(loginform)" novalidate>\n  <div class="list">\n    <label class="item item-input item-floating-label">\n      <span class="input-label">{{\'Username\'|translate}}</span>\n      <input type="text" placeholder="{{\'Username\'|translate}}" name="username"\n             ng-model="loginC.service.form.username.value"\n             required>\n    </label>\n    <label class="item item-input item-floating-label">\n      <span class="input-label">{{\'Password\'|translate}}</span>\n      <input type="password" name="password" placeholder="{{\'Password\'|translate}}"\n             ng-model="loginC.service.form.password.value" required>\n    </label>\n  </div>\n  <div class="padding">\n    <button class="button button-block button-dark" ng-disabled="loginForm.$invalid">{{\'Login\'|translate}}</button>\n  </div>\n</form>\n'),n.put("inline_labels.html",'<form class="login-list" name="loginform" ng-submit="loginC.submit(loginform)" novalidate>\n  <div class="list">\n    <label class="item item-input ">\n      <span class="input-label">{{\'Username\'|translate}}</span>\n      <input type="text" name="username" ng-model="loginC.service.form.username.value" required>\n    </label>\n    <label class="item item-input ">\n      <span class="input-label">{{\'Password\'|translate}}</span>\n      <input type="password" name="password" ng-model="loginC.service.form.password.value" required>\n    </label>\n  </div>\n  <div class="padding">\n    <button class="button button-block button-dark" ng-disabled="loginForm.$invalid">{{\'Login\'|translate}}</button>\n  </div>\n</form>\n'),n.put("input_icons.html",'<form class="login-list" name="loginform" ng-submit="loginC.submit(loginform)" novalidate>\n  <div class="list">\n    <label class="item item-input ">\n      <i class="icon {{loginC.icons.username}}"></i>\n      <input type="text" name="username" ng-model="loginC.service.form.username.value" placeholder="{{\'Username\'|translate}}" required>\n    </label>\n    <label class="item item-input ">\n      <i class="icon {{loginC.icons.password}}"></i>\n      <input type="password" name="password" ng-model="loginC.service.form.password.value" placeholder="{{\'Password\'|translate}}" required>\n    </label>\n  </div>\n  <div class="padding">\n    <button class="button button-block icon-left button-dark button-icon icon {{loginC.icons.login}}" ng-disabled="loginForm.$invalid">{{\'Login\'|translate}}</button>\n  </div>\n</form>\n'),n.put("inset_labels.html",'<form class="login-list" name="loginform" ng-submit="loginC.submit(loginform)"\n      novalidate>\n  <div class="list list-inset">\n    <label class="item item-input ">\n      <span class="input-label ">{{\'Username\'|translate}}</span>\n      <input  type="text" name="username" ng-model="loginC.service.form.username.value"\n             required>\n    </label>\n    <label class="item item-input ">\n      <span class="input-label ">{{\'Password\'|translate}}</span>\n      <input  type="password" name="password"\n             ng-model="loginC.service.form.password.value" required>\n    </label>\n  </div>\n  <div class="padding">\n    <button class="button button-block button-dark" ng-disabled="loginForm.$invalid">{{\'Login\'|translate}}</button>\n  </div>\n</form>\n'),n.put("placeholder_label.html",'<form  class="login-list" name="loginform" ng-submit="loginC.submit(loginform)"\n      novalidate>\n  <div class="list">\n    <label class="item item-input ">\n      <input class="royal" type="text" placeholder="{{\'Username\'|translate}}" name="username" ng-model="loginC.service.form.username.value"\n             required>\n    </label>\n    <label class="item item-input ">\n      <input class="royal" type="password" name="password" placeholder="{{\'Password\'|translate}}"\n             ng-model="loginC.service.form.password.value" required>\n    </label>\n    <button class="button button-dark button-block" ng-disabled="loginForm.$invalid">\n      {{\'Login\'|translate}}\n    </button>\n  </div>\n</form>\n\n'),n.put("stacked_label.html",'<form  class="login-list" name="loginform" ng-submit="loginC.submit(loginform)"\n      novalidate>\n  <div class="list">\n    <label class="item item-input item-stacked-label">\n      <span class="input-label balanced">Username</span>\n      <input class="royal" type="text" placeholder="John" name="username" ng-model="loginC.service.form.username.value"\n             required>\n    </label>\n    <label class="item item-input item-stacked-label">\n      <span class="input-label balanced">Password</span>\n      <input class="royal" type="password" name="password" placeholder="Password"\n             ng-model="loginC.service.form.password.value" required>\n    </label>\n    <button class="button button-dark button-block" ng-disabled="loginForm.$invalid">\n      {{\'Login\'|translate}}\n    </button>\n  </div>\n</form>\n')}]);
//# sourceMappingURL=relution-client-security.min.js.map