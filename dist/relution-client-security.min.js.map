{"version":3,"sources":["relutionClientSecurity.js","directives/log-out-button-dir.js","factory/base64.js","providers/relution-security-config-prov.js","services/login-serv.js","templates.js"],"names":["angular","module","directive","$relutionAuthLauncher","$q","LoginService","template","restrict","link","scope","icon","iconSet","logout","secureLogout","factory","keyStr","encode","input","chr1","chr2","enc1","enc2","enc3","output","chr3","enc4","i","charCodeAt","isNaN","charAt","length","decode","base64test","exec","window","alert","replace","indexOf","String","fromCharCode","provider","this","forwardStateAfterLogin","forwardStateAfterLogout","loginUrl","logoutUrl","icons","android","login","username","password","organization","ios","formViews","PLACEHOLDER_LABELS","INLINE_LABELS","STACKED_LABELS","FLOATING_LABELS","INSET_LABELS","INPUT_ICONS","setIcons","key","ionic","Platform","isAndroid","assign","setLayoutStyle","view","$get","service","$state","Base64","$rootScope","$relutionSecurityConfig","self","userResponse","isLoggedIn","basicAuth","form","value","globals","type","required","setUsername","setPassword","clearCredentials","jQuery","ajaxSetup","headers","Authorization","logon","xhrFields","withCredentials","secureLogin","success","resp","go","error","e","console","successLogout","user","log","errorLogout","when","params","userName","ajax","Content-Type","url","data","JSON","stringify","dataType","post","run","$templateCache","put"],"mappings":"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","file":"relution-client-security.min.js","sourcesContent":["/**\n * Created by Pascal Brewing\n * Copyright (c)\n * 2015\n * M-Way Solutions GmbH. All rights reserved.\n * http://www.mwaysolutions.com\n * Redistribution and use in source and binary forms, with or without\n * modification, are not permitted.\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n'use strict';\n/**\n * @ngdoc interface\n * @name relutionAuth\n * @description A Login/Logout Module for Relution LiveData. Works well with generator-m check the Readme for more instructions\n */\nangular.module('relutionClientSecurity', []);\n","'use strict';\n/**\n* @ngdoc directive\n* @name relutionClientSecurity:relutionLogOutButton\n*\n* @description\n* A logout button directive with a icon\n*\n* @restrict AEC\n */\nangular.module('relutionClientSecurity')\n.directive('relutionLogOutButton', [\"$relutionAuthLauncher\", \"$q\", \"LoginService\", function ($relutionAuthLauncher, $q, LoginService) {\n  return {\n    template: '<button ng-click=\"logout();\" class=\"button button-icon icon {{icon}}\"></button>',\n    restrict: 'AEC',\n    link: function postLink (scope) {\n      scope.icon = $relutionAuthLauncher.iconSet.logout;\n      scope.logout = function () {\n        return LoginService.secureLogout();\n      };\n    }\n  };\n}]);\n","/**\n * Created by pascalbrewing on 22/06/15\n * Copyright (c)\n * 2015\n * M-Way Solutions GmbH. All rights reserved.\n * http://www.mwaysolutions.com\n * Redistribution and use in source and binary forms, with or without\n * modification, are not permitted.\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n'use strict';\n/**\n * @ngdoc service\n * @name relutionClientSecurity:Base64\n */\nangular.module('relutionClientSecurity')\n  .factory('Base64', function () {\n    /* jshint ignore:start */\n    // jscs:disable\n    var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n    return {\n      /**\n       * @ngdoc method\n       * @name encode\n       * @methodOf relutionClientSecurity:Base64\n       */\n      encode: function (input) {\n        var output = \"\";\n        var chr1, chr2, chr3 = \"\";\n        var enc1, enc2, enc3, enc4 = \"\";\n        var i = 0;\n\n        do {\n          chr1 = input.charCodeAt(i++);\n          chr2 = input.charCodeAt(i++);\n          chr3 = input.charCodeAt(i++);\n\n          enc1 = chr1 >> 2;\n          enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n          enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n          enc4 = chr3 & 63;\n\n          if (isNaN(chr2)) {\n            enc3 = enc4 = 64;\n          } else if (isNaN(chr3)) {\n            enc4 = 64;\n          }\n\n          output = output +\n            keyStr.charAt(enc1) +\n            keyStr.charAt(enc2) +\n            keyStr.charAt(enc3) +\n            keyStr.charAt(enc4);\n          chr1 = chr2 = chr3 = \"\";\n          enc1 = enc2 = enc3 = enc4 = \"\";\n        } while (i < input.length);\n\n        return output;\n      },\n      /**\n       * @ngdoc method\n       * @name decode\n       * @methodOf relutionClientSecurity:Base64\n       */\n      decode: function (input) {\n        var output = \"\";\n        var chr1, chr2, chr3 = \"\";\n        var enc1, enc2, enc3, enc4 = \"\";\n        var i = 0;\n\n        // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n        var base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n        if (base64test.exec(input)) {\n          window.alert(\"There were invalid base64 characters in the input text.\\n\" +\n            \"Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\\n\" +\n            \"Expect errors in decoding.\");\n        }\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        do {\n          enc1 = keyStr.indexOf(input.charAt(i++));\n          enc2 = keyStr.indexOf(input.charAt(i++));\n          enc3 = keyStr.indexOf(input.charAt(i++));\n          enc4 = keyStr.indexOf(input.charAt(i++));\n\n          chr1 = (enc1 << 2) | (enc2 >> 4);\n          chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n          chr3 = ((enc3 & 3) << 6) | enc4;\n\n          output = output + String.fromCharCode(chr1);\n\n          if (enc3 != 64) {\n            output = output + String.fromCharCode(chr2);\n          }\n          if (enc4 != 64) {\n            output = output + String.fromCharCode(chr3);\n          }\n\n          chr1 = chr2 = chr3 = \"\";\n          enc1 = enc2 = enc3 = enc4 = \"\";\n\n        } while (i < input.length);\n\n        return output;\n      }\n    };\n    /* jshint ignore:end */\n    // jscs:enable\n  });\n","/**\n * Created by pascalbrewing on 24/06/15\n * Copyright (c)\n * 2015\n * M-Way Solutions GmbH. All rights reserved.\n * http://www.mwaysolutions.com\n * Redistribution and use in source and binary forms, with or without\n * modification, are not permitted.\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n'use strict';\n/**\n * @ngdoc service\n * @name relutionClientSecurity:$relutionSecurityConfig\n * @description Configuration for the relutionAuth module\n */\nangular.module('relutionClientSecurity')\n  .provider('$relutionSecurityConfig', function () {\n    var provider = this;\n    /**\n     * @ngdoc property\n     * @name iconSet\n     * @description available Icons\n     * @propertyOf relutionClientSecurity:$relutionSecurityConfig\n     */\n    provider.iconSet = null;\n    /**\n     * @ngdoc property\n     * @name forwardStateAfterLogin\n     * @description the redirect url after login is successfull\n     * @propertyOf relutionClientSecurity:$relutionSecurityConfig\n     */\n    provider.forwardStateAfterLogin = null;\n    /**\n     * @ngdoc property\n     * @name forwardStateAfterLogout\n     * @description the redirect url after logout\n     * @propertyOf relutionClientSecurity:$relutionSecurityConfig\n     */\n    provider.forwardStateAfterLogout = null;\n    /**\n     * @ngdoc property\n     * @name loginUrl\n     * @description the server login url\n     * @propertyOf relutionClientSecurity:$relutionSecurityConfig\n     */\n    provider.loginUrl = null;\n    /**\n     * @ngdoc property\n     * @name loginUrl\n     * @description the server logout url\n     * @propertyOf relutionClientSecurity:$relutionSecurityConfig\n     */\n    provider.logoutUrl = null;\n    /**\n     * @ngdoc property\n     * @name icons\n     * @description the standard icon set\n     * @propertyOf relutionClientSecurity:$relutionSecurityConfig\n     */\n    provider.icons =\n    {\n      android: {\n        login: 'ion-log-in',\n        username: 'ion-android-person',\n        password: 'ion-lock-combination',\n        organization: 'ion-briefcase',\n        logout: 'ion-log-out'\n      },\n      ios: {\n        login: 'ion-log-in',\n        username: 'ion-ios-person',\n        password: 'ion-lock-combination',\n        organization: 'ion-briefcase',\n        logout: 'ion-log-out'\n      }\n    };\n    /**\n     * @ngdoc property\n     * @name formViews\n     * @description available form views\n     * @propertyOf relutionClientSecurity:$relutionSecurityConfig\n     */\n    provider.formViews = {\n      PLACEHOLDER_LABELS: 'placeholder_label.html',\n      INLINE_LABELS: 'inline_labels.html',\n      STACKED_LABELS: 'stacked_label.html',\n      FLOATING_LABELS: 'floating_labels.html',\n      INSET_LABELS: 'inset_labels.html',\n      INPUT_ICONS: 'input_icons.html'\n    };\n    /**\n     * @ngdoc method\n     * @name setIcons\n     * @description set the icons by Platform\n     * @methodOf relutionClientSecurity:$relutionSecurityConfig\n     */\n    provider.setIcons = function (key, icons) {\n      provider.iconSet = ionic.Platform.isAndroid() ? provider.icons.android : provider.icons.ios;\n      if (!key && !icons) {\n        return provider.iconSet;\n      }\n      if (key) {\n        provider.iconSet = provider.icons[key];\n        if (icons) {\n          return provider.iconSet.assign(icons);\n        }\n      }\n    };\n    /**\n     * @ngdoc method\n     * @name setLayoutStyle\n     * @description standard view\n     * @methodOf relutionClientSecurity:$relutionSecurityConfig\n     */\n    provider.setLayoutStyle = function (key) {\n      if (!key) {\n        provider.setLayoutStyle(provider.formViews.PLACEHOLDER_LABELS);\n      }\n      provider.view = provider.formViews[key];\n    };\n    /**\n     * @ngdoc method\n     * @name $get\n     * @description init the provider\n     * @methodOf relutionClientSecurity:$relutionSecurityConfig\n     */\n    provider.$get = function () {\n      return provider;\n    };\n  });\n","/**\n * Created by Pascal Brewing\n * Copyright (c)\n * 2015\n * M-Way Solutions GmbH. All rights reserved.\n * http://www.mwaysolutions.com\n * Redistribution and use in source and binary forms, with or without\n * modification, are not permitted.\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n'use strict';\n/**\n * @ngdoc service\n * @name relutionClientSecurity:LoginService\n * @requires $q\n * @requires $state\n * @requires Base64\n * @requires $rootScope\n * @requires $relutionSecurityConfig\n * @description Simple Service to login and logout on relution server and store the result in the  LoginService.userResponse\n */\nangular.module('relutionClientSecurity')\n  .service('LoginService', [\"$q\", \"$state\", \"Base64\", \"$rootScope\", \"$relutionSecurityConfig\", function LoginService($q, $state, Base64, $rootScope, $relutionSecurityConfig) {\n    var self = this;\n    /**\n     * @ngdoc property\n     * @name userResponse\n     * @description the response user\n     * @propertyOf relutionClientSecurity:LoginService\n     */\n    this.userResponse = null;\n    /**\n     * @ngdoc property\n     * @name isLoggedIn\n     * @description bool if the user is loggedIn\n     * @propertyOf relutionClientSecurity:LoginService\n     */\n    this.isLoggedIn = false;\n    /**\n     * @ngdoc property\n     * @name basicAuth\n     * @description a base64 hash\n     * @propertyOf relutionClientSecurity:LoginService\n     */\n    this.basicAuth = null;\n    /**\n     * @ngdoc property\n     * @name form\n     * @description the form fields\n     * @propertyOf relutionClientSecurity:LoginService\n     */\n    this.form = {\n      username: {\n        value: $rootScope.globals ? $rootScope.globals.username : null,\n        type: 'text',\n        required: true\n      },\n      password: {\n        value: null,\n        type: 'password',\n        required: true\n      }\n    };\n    /**\n     * @ngdoc method\n     * @name setUsername\n     * @description set the username\n     * @methodOf relutionClientSecurity:LoginService\n     */\n    this.setUsername = function (username) {\n      self.form.username.value = username;\n    };\n    /**\n     * @ngdoc method\n     * @name setPassword\n     * @description set the password\n     * @methodOf relutionClientSecurity:LoginService\n     */\n    this.setPassword = function (password) {\n      self.form.password.value = password;\n    };\n    /**\n     * @ngdoc method\n     * @name clearCredentials\n     * @description remove the Basic auth from the Header\n     * @methodOf relutionClientSecurity:LoginService\n     */\n    this.clearCredentials = function () {\n      jQuery.ajaxSetup({\n        headers: {\n          'Authorization': 'Basic '\n        }\n      });\n    };\n    /**\n     * @ngdoc method\n     * @name logon\n     * @description set credentials the use post to connect\n     * @methodOf relutionClientSecurity:LoginService\n     */\n    this.logon = function () {\n      self.basicAuth = Base64.encode(self.form.username.value + ':' + self.form.password.value);\n      jQuery.ajaxSetup({\n        xhrFields: {\n          withCredentials: true//add Cookie JSESSIONID\n        }\n      });\n      return self.secureLogin();\n    };\n    /**\n     * @ngdoc method\n     * @name success\n     * @description login succesfully\n     * @methodOf relutionClientSecurity:LoginService\n     */\n    this.success = function (resp) {\n      self.userResponse = resp;\n      return $state.go($relutionSecurityConfig.forwardStateAfterLogin);\n    };\n    /**\n     * @ngdoc method\n     * @name error\n     * @description login failed\n     * @methodOf relutionClientSecurity:LoginService\n     */\n    this.error = function (e) {\n      return console.error('Login failed', e);\n    };\n    /**\n     * @ngdoc method\n     * @name successLogout\n     * @description logout succesfully\n     * @methodOf relutionClientSecurity:LoginService\n     */\n    this.successLogout = function () {\n      self.user = null;\n      console.log('logged out');\n      return $state.go($relutionSecurityConfig.forwardStateAfterLogout);\n    };\n    /**\n     * @ngdoc method\n     * @name errorLogout\n     * @description logout failed\n     * @methodOf relutionClientSecurity:LoginService\n     */\n    this.errorLogout = function (e) {\n      return console.error('Logout failed', e);\n    };\n    /**\n     * @ngdoc method\n     * @name secureLogin\n     * @description login on Server with Credentials\n     * @methodOf relutionClientSecurity:LoginService\n     */\n    this.secureLogin = function () {\n      if (!$relutionSecurityConfig.loginUrl) {\n        console.error('please configure your loginUrl, $relutionSecurityConfig.loginUrl = secureloginUrl');\n        return $q.when(false);\n      }\n      var params = {\n        userName: self.form.username.value,\n        password: self.form.password.value\n      };\n      return jQuery.ajax({\n        type: 'POST',\n        headers: {\n          'Content-Type': 'application/json'//USE JSON Stadard\n        },\n        url: $relutionSecurityConfig.loginUrl,\n        data: JSON.stringify(params),\n        success: self.success,\n        error: self.error,\n        dataType: 'json'\n      });\n    };\n    /**\n     * @ngdoc method\n     * @name secureLogout\n     * @description logout on Server\n     * @methodOf relutionClientSecurity:LoginService\n     */\n    this.secureLogout = function () {\n      if (!$relutionSecurityConfig.logoutUrl) {\n        console.error('please configure your logoutUrl, $relutionSecurityConfig.logoutUrl = secureloginUrl');\n        return $q.when(false);\n      }\n      return jQuery.post($relutionSecurityConfig.logoutUrl, self.successLogout);\n    };\n  }]\n);\n","angular.module(\"relutionClientSecurity\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"floating_labels.html\",\"<form class=\\\"login-list\\\" name=\\\"loginform\\\" ng-submit=\\\"loginC.submit(loginform)\\\" novalidate>\\n  <div class=\\\"list\\\">\\n    <label class=\\\"item item-input item-floating-label\\\">\\n      <span class=\\\"input-label\\\">{{::\\'Username\\'|translate}}</span>\\n      <input type=\\\"text\\\" placeholder=\\\"{{::\\'Username\\'|translate}}\\\" name=\\\"username\\\"\\n             ng-model=\\\"loginC.service.form.username.value\\\"\\n             required>\\n    </label>\\n    <label class=\\\"item item-input item-floating-label\\\">\\n      <span class=\\\"input-label\\\">{{::\\'Password\\'|translate}}</span>\\n      <input type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"{{::\\'Password\\'|translate}}\\\"\\n             ng-model=\\\"loginC.service.form.password.value\\\" required>\\n    </label>\\n  </div>\\n  <div class=\\\"padding\\\">\\n    <button class=\\\"button button-block button-dark\\\" ng-disabled=\\\"loginForm.$invalid\\\">{{::\\'LOGIN\\'|translate}}</button>\\n  </div>\\n</form>\\n\");\n$templateCache.put(\"inline_labels.html\",\"<form class=\\\"login-list\\\" name=\\\"loginform\\\" ng-submit=\\\"loginC.submit(loginform)\\\" novalidate>\\n  <div class=\\\"list\\\">\\n    <label class=\\\"item item-input \\\">\\n      <span class=\\\"input-label\\\">{{::\\'Username\\'|translate}}</span>\\n      <input type=\\\"text\\\" name=\\\"username\\\" ng-model=\\\"loginC.service.form.username.value\\\" required>\\n    </label>\\n    <label class=\\\"item item-input \\\">\\n      <span class=\\\"input-label\\\">{{::\\'Password\\'|translate}}</span>\\n      <input type=\\\"password\\\" name=\\\"password\\\" ng-model=\\\"loginC.service.form.password.value\\\" required>\\n    </label>\\n  </div>\\n  <div class=\\\"padding\\\">\\n    <button class=\\\"button button-block button-dark\\\" ng-disabled=\\\"loginForm.$invalid\\\">{{::\\'LOGIN\\'|translate}}</button>\\n  </div>\\n</form>\\n\");\n$templateCache.put(\"input_icons.html\",\"<form class=\\\"login-list\\\" name=\\\"loginform\\\" ng-submit=\\\"loginC.submit(loginform)\\\" novalidate>\\n  <div class=\\\"list\\\">\\n    <label class=\\\"item item-input \\\">\\n      <i class=\\\"icon {{loginC.icons.username}}\\\"></i>\\n      <input type=\\\"text\\\" name=\\\"username\\\" ng-model=\\\"loginC.service.form.username.value\\\" placeholder=\\\"{{::\\'Username\\'|translate}}\\\" required>\\n    </label>\\n    <label class=\\\"item item-input \\\">\\n      <i class=\\\"icon {{loginC.icons.password}}\\\"></i>\\n      <input type=\\\"password\\\" name=\\\"password\\\" ng-model=\\\"loginC.service.form.password.value\\\" placeholder=\\\"{{::\\'Password\\'|translate}}\\\" required>\\n    </label>\\n  </div>\\n  <div class=\\\"padding\\\">\\n    <button class=\\\"button button-block icon-left button-dark button-icon icon {{loginC.icons.login}}\\\" ng-disabled=\\\"loginForm.$invalid\\\">{{::\\'LOGIN\\'|translate}}</button>\\n  </div>\\n</form>\\n\");\n$templateCache.put(\"inset_labels.html\",\"<form class=\\\"login-list\\\" name=\\\"loginform\\\" ng-submit=\\\"loginC.submit(loginform)\\\"\\n      novalidate>\\n  <div class=\\\"list list-inset\\\">\\n    <label class=\\\"item item-input \\\">\\n      <span class=\\\"input-label \\\">{{::\\'Username\\'|translate}}</span>\\n      <input  type=\\\"text\\\" name=\\\"username\\\" ng-model=\\\"loginC.service.form.username.value\\\"\\n             required>\\n    </label>\\n    <label class=\\\"item item-input \\\">\\n      <span class=\\\"input-label \\\">{{::\\'Password\\'|translate}}</span>\\n      <input  type=\\\"password\\\" name=\\\"password\\\"\\n             ng-model=\\\"loginC.service.form.password.value\\\" required>\\n    </label>\\n  </div>\\n  <div class=\\\"padding\\\">\\n    <button class=\\\"button button-block button-dark\\\" ng-disabled=\\\"loginForm.$invalid\\\">{{::\\'LOGIN\\'|translate}}</button>\\n  </div>\\n</form>\\n\");\n$templateCache.put(\"placeholder_label.html\",\"<form  class=\\\"login-list\\\" name=\\\"loginform\\\" ng-submit=\\\"loginC.submit(loginform)\\\"\\n      novalidate>\\n  <div class=\\\"list\\\">\\n    <label class=\\\"item item-input \\\">\\n      <input class=\\\"royal\\\" type=\\\"text\\\" placeholder=\\\"{{::\\'Username\\'|translate}}\\\" name=\\\"username\\\" ng-model=\\\"loginC.service.form.username.value\\\"\\n             required>\\n    </label>\\n    <label class=\\\"item item-input \\\">\\n      <input class=\\\"royal\\\" type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"{{::\\'Password\\'|translate}}\\\"\\n             ng-model=\\\"loginC.service.form.password.value\\\" required>\\n    </label>\\n    <button class=\\\"button button-dark button-block\\\" ng-disabled=\\\"loginForm.$invalid\\\">\\n      {{::\\'LOGIN\\'|translate}}\\n    </button>\\n  </div>\\n</form>\\n\\n\");\n$templateCache.put(\"stacked_label.html\",\"<form  class=\\\"login-list\\\" name=\\\"loginform\\\" ng-submit=\\\"loginC.submit(loginform)\\\"\\n      novalidate>\\n  <div class=\\\"list\\\">\\n    <label class=\\\"item item-input item-stacked-label\\\">\\n      <span class=\\\"input-label balanced\\\">Username</span>\\n      <input class=\\\"royal\\\" type=\\\"text\\\" placeholder=\\\"John\\\" name=\\\"username\\\" ng-model=\\\"loginC.service.form.username.value\\\"\\n             required>\\n    </label>\\n    <label class=\\\"item item-input item-stacked-label\\\">\\n      <span class=\\\"input-label balanced\\\">Password</span>\\n      <input class=\\\"royal\\\" type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\"\\n             ng-model=\\\"loginC.service.form.password.value\\\" required>\\n    </label>\\n    <button class=\\\"button button-dark button-block\\\" ng-disabled=\\\"loginForm.$invalid\\\">\\n      {{::\\'LOGIN\\'|translate}}\\n    </button>\\n  </div>\\n</form>\\n\");}]);"],"sourceRoot":"/source/"}