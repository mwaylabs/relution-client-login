{"version":3,"sources":["relutionClientSecurity.js","directives/log-out-button-dir.js","factory/base64.js","providers/relution-security-config-prov.js","services/header-serv.js","services/login-serv.js","services/user-serv.js","templates.js"],"names":["angular","module","directive","$relutionSecurityConfig","$q","LoginService","template","restrict","link","scope","icon","iconSet","logout","secureLogout","factory","keyStr","encode","input","chr1","chr2","enc1","enc2","enc3","output","chr3","enc4","i","charCodeAt","isNaN","charAt","length","decode","base64test","exec","window","alert","replace","indexOf","String","fromCharCode","provider","this","forwardStateAfterLogin","forwardStateAfterLogout","loginUrl","logoutUrl","icons","android","login","username","password","organization","ios","formViews","PLACEHOLDER_LABELS","INLINE_LABELS","STACKED_LABELS","FLOATING_LABELS","INSET_LABELS","INPUT_ICONS","setIcons","key","ionic","Platform","isAndroid","assign","setLayoutStyle","view","$get","service","XGoferUser","XServer","XRelutionVersion","init","resp","getResponseHeader","reset","$state","Base64","$rootScope","UserService","HeaderService","self","userResponse","header","isLoggedIn","basicAuth","form","value","globals","type","required","setUsername","setPassword","clearCredentials","jQuery","ajaxSetup","headers","Authorization","logon","xhrFields","withCredentials","secureLogin","success","when","then","go","complete","xhr","getAllResponseHeaders","error","e","console","successLogout","all","errorLogout","params","userName","ajax","Content-Type","Access-Control-Allow-Origin","url","data","JSON","stringify","dataType","post","user","roles","_setUser","getUser","_setRoles","getRoles","_setOrganization","getOrganization","_getProperty","property","_getPropertyByObject","object","_getProperties","properties","Array","isArray","temp","forEach","push","getUserProperty","getUserProperties","getRolesProperty","role","getOrganizationProperty","getOrganizationProperties","run","$templateCache","put"],"mappings":"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","file":"relution-client-security.min.js","sourcesContent":["/**\n * Created by Pascal Brewing\n * Copyright (c)\n * 2015\n * M-Way Solutions GmbH. All rights reserved.\n * http://www.mwaysolutions.com\n * Redistribution and use in source and binary forms, with or without\n * modification, are not permitted.\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n'use strict';\n/**\n * @ngdoc interface\n * @name relutionClientSecurity\n * @description A Login/Logout Module for Relution LiveData. Works well with generator-m check the Readme for more instructions\n */\nangular.module('relutionClientSecurity', ['ui.router', 'pascalprecht.translate']);\n","'use strict';\n/**\n* @ngdoc directive\n* @name relutionLogOutButton\n*\n* @description\n* A logout button directive with a icon\n*\n* @restrict E\n */\nangular.module('relutionClientSecurity')\n.directive('relutionLogOutButton', [\"$relutionSecurityConfig\", \"$q\", \"LoginService\", function ($relutionSecurityConfig, $q, LoginService) {\n  return {\n    template: '<button ng-click=\"logout();\" class=\"button button-icon icon {{icon}}\"></button>',\n    restrict: 'E',\n    link: function postLink (scope) {\n      scope.icon = $relutionSecurityConfig.iconSet.logout;\n      scope.logout = function () {\n        return LoginService.secureLogout();\n      };\n    }\n  };\n}]);\n","/**\n * Created by pascalbrewing on 22/06/15\n * Copyright (c)\n * 2015\n * M-Way Solutions GmbH. All rights reserved.\n * http://www.mwaysolutions.com\n * Redistribution and use in source and binary forms, with or without\n * modification, are not permitted.\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n'use strict';\n/**\n * @ngdoc service\n * @name Base64\n */\nangular.module('relutionClientSecurity')\n  .factory('Base64', function () {\n    /* jshint ignore:start */\n    // jscs:disable\n    var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n    return {\n      /**\n       * @ngdoc method\n       * @name encode\n       * @methodOf Base64\n       */\n      encode: function (input) {\n        var output = \"\";\n        var chr1, chr2, chr3 = \"\";\n        var enc1, enc2, enc3, enc4 = \"\";\n        var i = 0;\n\n        do {\n          chr1 = input.charCodeAt(i++);\n          chr2 = input.charCodeAt(i++);\n          chr3 = input.charCodeAt(i++);\n\n          enc1 = chr1 >> 2;\n          enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n          enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n          enc4 = chr3 & 63;\n\n          if (isNaN(chr2)) {\n            enc3 = enc4 = 64;\n          } else if (isNaN(chr3)) {\n            enc4 = 64;\n          }\n\n          output = output +\n            keyStr.charAt(enc1) +\n            keyStr.charAt(enc2) +\n            keyStr.charAt(enc3) +\n            keyStr.charAt(enc4);\n          chr1 = chr2 = chr3 = \"\";\n          enc1 = enc2 = enc3 = enc4 = \"\";\n        } while (i < input.length);\n\n        return output;\n      },\n      /**\n       * @ngdoc method\n       * @name decode\n       * @methodOf Base64\n       */\n      decode: function (input) {\n        var output = \"\";\n        var chr1, chr2, chr3 = \"\";\n        var enc1, enc2, enc3, enc4 = \"\";\n        var i = 0;\n\n        // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n        var base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n        if (base64test.exec(input)) {\n          window.alert(\"There were invalid base64 characters in the input text.\\n\" +\n            \"Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\\n\" +\n            \"Expect errors in decoding.\");\n        }\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        do {\n          enc1 = keyStr.indexOf(input.charAt(i++));\n          enc2 = keyStr.indexOf(input.charAt(i++));\n          enc3 = keyStr.indexOf(input.charAt(i++));\n          enc4 = keyStr.indexOf(input.charAt(i++));\n\n          chr1 = (enc1 << 2) | (enc2 >> 4);\n          chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n          chr3 = ((enc3 & 3) << 6) | enc4;\n\n          output = output + String.fromCharCode(chr1);\n\n          if (enc3 != 64) {\n            output = output + String.fromCharCode(chr2);\n          }\n          if (enc4 != 64) {\n            output = output + String.fromCharCode(chr3);\n          }\n\n          chr1 = chr2 = chr3 = \"\";\n          enc1 = enc2 = enc3 = enc4 = \"\";\n\n        } while (i < input.length);\n\n        return output;\n      }\n    };\n    /* jshint ignore:end */\n    // jscs:enable\n  });\n","/**\n * Created by pascalbrewing on 24/06/15\n * Copyright (c)\n * 2015\n * M-Way Solutions GmbH. All rights reserved.\n * http://www.mwaysolutions.com\n * Redistribution and use in source and binary forms, with or without\n * modification, are not permitted.\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n'use strict';\n/**\n * @ngdoc service\n * @name $relutionSecurityConfig\n * @description Configuration for the relutionAuth module\n */\nangular.module('relutionClientSecurity')\n  .provider('$relutionSecurityConfig', function () {\n    var provider = this;\n    /**\n     * @ngdoc property\n     * @name iconSet\n     * @description available Icons\n     * @propertyOf $relutionSecurityConfig\n     */\n    provider.iconSet = null;\n    /**\n     * @ngdoc property\n     * @name forwardStateAfterLogin\n     * @description the redirect url after login is successfull\n     * @propertyOf $relutionSecurityConfig\n     */\n    provider.forwardStateAfterLogin = null;\n    /**\n     * @ngdoc property\n     * @name forwardStateAfterLogout\n     * @description the redirect url after logout\n     * @propertyOf $relutionSecurityConfig\n     */\n    provider.forwardStateAfterLogout = null;\n    /**\n     * @ngdoc property\n     * @name loginUrl\n     * @description the server login url\n     * @propertyOf $relutionSecurityConfig\n     */\n    provider.loginUrl = null;\n    /**\n     * @ngdoc property\n     * @name loginUrl\n     * @description the server logout url\n     * @propertyOf $relutionSecurityConfig\n     */\n    provider.logoutUrl = null;\n    /**\n     * @ngdoc property\n     * @name icons\n     * @description the standard icon set\n     * @propertyOf $relutionSecurityConfig\n     */\n    provider.icons =\n    {\n      android: {\n        login: 'ion-log-in',\n        username: 'ion-android-person',\n        password: 'ion-lock-combination',\n        organization: 'ion-briefcase',\n        logout: 'ion-log-out'\n      },\n      ios: {\n        login: 'ion-log-in',\n        username: 'ion-ios-person',\n        password: 'ion-lock-combination',\n        organization: 'ion-briefcase',\n        logout: 'ion-log-out'\n      }\n    };\n    /**\n     * @ngdoc property\n     * @name formViews\n     * @description available form views\n     * @propertyOf $relutionSecurityConfig\n     */\n    provider.formViews = {\n      PLACEHOLDER_LABELS: 'placeholder_label.html',\n      INLINE_LABELS: 'inline_labels.html',\n      STACKED_LABELS: 'stacked_label.html',\n      FLOATING_LABELS: 'floating_labels.html',\n      INSET_LABELS: 'inset_labels.html',\n      INPUT_ICONS: 'input_icons.html'\n    };\n    /**\n     * @ngdoc method\n     * @name setIcons\n     * @description set the icons by Platform\n     * @methodOf $relutionSecurityConfig\n     */\n    provider.setIcons = function (key, icons) {\n      provider.iconSet = ionic.Platform.isAndroid() ? provider.icons.android : provider.icons.ios;\n      if (!key && !icons) {\n        return provider.iconSet;\n      }\n      if (key) {\n        provider.iconSet = provider.icons[key];\n        if (icons) {\n          return provider.iconSet.assign(icons);\n        }\n      }\n    };\n    /**\n     * @ngdoc method\n     * @name setLayoutStyle\n     * @description standard view\n     * @methodOf $relutionSecurityConfig\n     */\n    provider.setLayoutStyle = function (key) {\n      if (!key) {\n        provider.setLayoutStyle(provider.formViews.PLACEHOLDER_LABELS);\n      }\n      provider.view = provider.formViews[key];\n    };\n    /**\n     * @ngdoc method\n     * @name $get\n     * @description init the provider\n     * @methodOf $relutionSecurityConfig\n     */\n    provider.$get = function () {\n      return provider;\n    };\n  });\n","/**\n * Created by Pascal Brewing\n * Copyright (c)\n * 2015\n * M-Way Solutions GmbH. All rights reserved.\n * http://www.mwaysolutions.com\n * Redistribution and use in source and binary forms, with or without\n * modification, are not permitted.\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n'use strict';\n/**\n * @ngdoc service\n * @name HeaderService\n * @requires $q\n * @description Simple Service to set the User Informations\n */\nangular.module('relutionClientSecurity')\n  .service('HeaderService', [\"$q\", function HeaderService($q) {\n    var self = this;\n    /**\n     * @ngdoc property\n     * @name XGoferUser\n     * @description the user uuid\n     * @propertyOf HeaderService\n     * @returns {String} or null\n     */\n    this.XGoferUser = null;\n    /**\n     * @ngdoc property\n     * @name XServer\n     * @propertyOf HeaderService\n     * @returns {String} or null\n     */\n    this.XServer = null;\n    /**\n     * @ngdoc property\n     * @name XRelutionVersion\n     * @description used Relution Version\n     * @propertyOf HeaderService\n     * @returns {String} or null\n     */\n    this.XRelutionVersion = null;\n    /**\n     * @ngdoc method\n     * @name init\n     * @description initial the Service require the response on complete\n     * @methodOf HeaderService\n     */\n    this.init = function (resp) {\n     this.XGoferUser = resp.getResponseHeader('X-Gofer-User');\n     this.XServer = resp.getResponseHeader('X-Server');\n     this.XRelutionVersion = resp.getResponseHeader('X-Relution-Version');\n    };\n    /**\n     * @ngdoc method\n     * @name reset\n     * @description reset the Service\n     * @methodOf HeaderService\n     */\n    this.reset = function () {\n      this.XGoferUser = null;\n      this.XServer = null;\n      this.XRelutionVersion = null;\n    };\n  }]\n);\n","/**\n * Created by Pascal Brewing\n * Copyright (c)\n * 2015\n * M-Way Solutions GmbH. All rights reserved.\n * http://www.mwaysolutions.com\n * Redistribution and use in source and binary forms, with or without\n * modification, are not permitted.\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n'use strict';\n/**\n * @ngdoc service\n * @name LoginService\n * @requires $q\n * @requires $state\n * @requires Base64\n * @requires $rootScope\n * @requires $relutionSecurityConfig\n * @description Simple Service to login and logout on relution server and store the result in the  LoginService.userResponse\n */\nangular.module('relutionClientSecurity')\n  .service('LoginService', [\"$q\", \"$state\", \"Base64\", \"$rootScope\", \"$relutionSecurityConfig\", \"UserService\", \"HeaderService\", function LoginService($q, $state, Base64, $rootScope, $relutionSecurityConfig, UserService, HeaderService) {\n    var self = this;\n    /**\n     * @ngdoc property\n     * @name userResponse\n     * @description the response user\n     * @propertyOf LoginService\n     * @returns {Object} {user:, roles, orhganization ..\n     */\n    this.userResponse = null;\n    /**\n     * @ngdoc property\n     * @name header\n     * @description the response header\n     * @propertyOf LoginService\n     * @returns {Object} {'X-Gofer-User' ...\n     */\n    this.header = null;\n    /**\n     * @ngdoc property\n     * @name isLoggedIn\n     * @description bool if the user is loggedIn\n     * @propertyOf LoginService\n     * @returns {boolean} true/false\n     */\n    this.isLoggedIn = false;\n    /**\n     * @ngdoc property\n     * @name basicAuth\n     * @description a base64 hash\n     * @propertyOf LoginService\n     */\n    this.basicAuth = null;\n    /**\n     * @ngdoc property\n     * @name form\n     * @description the form fields\n     * @propertyOf LoginService\n     * @returns {Object} {{username: {value: *, type: string, required: boolean}, password: {value: null, type: string, required: boolean}}}\n     */\n    this.form = {\n      username: {\n        value: $rootScope.globals ? $rootScope.globals.username : null,\n        type: 'text',\n        required: true\n      },\n      password: {\n        value: null,\n        type: 'password',\n        required: true\n      }\n    };\n    /**\n     * @ngdoc method\n     * @name setUsername\n     * @description set the username\n     * @methodOf LoginService\n     */\n    this.setUsername = function (username) {\n      self.form.username.value = username;\n    };\n    /**\n     * @ngdoc method\n     * @name setPassword\n     * @description set the password\n     * @methodOf LoginService\n     */\n    this.setPassword = function (password) {\n      self.form.password.value = password;\n    };\n    /**\n     * @ngdoc method\n     * @name clearCredentials\n     * @description remove the Basic auth from the Header\n     * @methodOf LoginService\n     */\n    this.clearCredentials = function () {\n      jQuery.ajaxSetup({\n        headers: {\n          'Authorization': 'Basic '\n        }\n      });\n    };\n    /**\n     * @ngdoc method\n     * @name logon\n     * @description set credentials the use post to connect\n     * @methodOf LoginService\n     */\n    this.logon = function () {\n      self.basicAuth = Base64.encode(self.form.username.value + ':' + self.form.password.value);\n      jQuery.ajaxSetup({\n        xhrFields: {\n          withCredentials: true//add Cookie JSESSIONID\n        }\n      });\n      return self.secureLogin();\n    };\n    /**\n     * @ngdoc method\n     * @name success\n     * @description login succesfully\n     * @methodOf LoginService\n     */\n    this.success = function (resp) {\n      self.userResponse = resp;\n      self.isLoggedIn = true;\n      //console.log('resp', resp);\n      return $q.when(UserService.init(resp)).then(function () {\n        return $state.go($relutionSecurityConfig.forwardStateAfterLogin);\n      });\n    };\n    /**\n     * @ngdoc method\n     * @name complete\n     * @description login succesfully\n     * @methodOf LoginService\n     */\n    this.complete = function (resp, xhr) {\n      HeaderService.init(resp);\n      return self.header = resp.getAllResponseHeaders();\n    };\n    /**\n     * @ngdoc method\n     * @name error\n     * @description login failed\n     * @methodOf LoginService\n     */\n    this.error = function (e) {\n      //console.log(e);\n      return console.error('Login failed', e);\n    };\n    /**\n     * @ngdoc method\n     * @name successLogout\n     * @description logout succesfully\n     * @methodOf LoginService\n     */\n    this.successLogout = function () {\n      self.userResponse = null;\n      self.isLoggedIn = false;\n      $q.all([UserService.reset(), HeaderService.reset()]).then(function () {\n        return $state.go($relutionSecurityConfig.forwardStateAfterLogout);\n      });\n    };\n    /**\n     * @ngdoc method\n     * @name errorLogout\n     * @description logout failed\n     * @methodOf LoginService\n     */\n    this.errorLogout = function (e) {\n      return console.error('Logout failed', e);\n    };\n    /**\n     * @ngdoc method\n     * @name secureLogin\n     * @description login on Server with Credentials\n     * @methodOf LoginService\n     */\n    this.secureLogin = function () {\n      if (!$relutionSecurityConfig.loginUrl) {\n        console.error('please configure your loginUrl, $relutionSecurityConfig.loginUrl = secureloginUrl');\n        return $q.when(false);\n      }\n\n      var params = {\n        userName: self.form.username.value,\n        password: self.form.password.value\n      };\n      return jQuery.ajax({\n        type: 'POST',\n        headers: {\n          'Content-Type': 'application/json',//USE JSON Stadard,\n          'Access-Control-Allow-Origin': '*'\n        },\n        url: $relutionSecurityConfig.loginUrl,\n        data: JSON.stringify(params),\n        success: self.success,\n        error: self.error,\n        complete: self.complete,\n        dataType: 'json'\n      });\n    };\n    /**\n     * @ngdoc method\n     * @name secureLogout\n     * @description logout on Server\n     * @methodOf LoginService\n     */\n    this.secureLogout = function () {\n      if (!$relutionSecurityConfig.logoutUrl) {\n        console.error('please configure your logoutUrl, $relutionSecurityConfig.logoutUrl = secureloginUrl');\n        return $q.when(false);\n      }\n      return jQuery.post($relutionSecurityConfig.logoutUrl, self.successLogout);\n    };\n  }]\n);\n","/**\n * Created by Pascal Brewing\n * Copyright (c)\n * 2015\n * M-Way Solutions GmbH. All rights reserved.\n * http://www.mwaysolutions.com\n * Redistribution and use in source and binary forms, with or without\n * modification, are not permitted.\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n'use strict';\n/**\n * @ngdoc service\n * @name UserService\n * @requires $q\n * @description Simple Service to set the User Informations\n */\nangular.module('relutionClientSecurity')\n  .service('UserService', [\"$q\", function UserService($q) {\n    var self = this;\n    /**\n     * @ngdoc property\n     * @name user\n     * @description the response user\n     * @propertyOf UserService\n     * @returns {Object} or null\n     */\n    this.user = null;\n    /**\n     * @ngdoc property\n     * @name roles\n     * @description all roles\n     * @propertyOf UserService\n     * @returns {Array} or null\n     */\n    this.roles = null;\n    /**\n     * @ngdoc property\n     * @name organization\n     * @description the user organization\n     * @propertyOf UserService\n     * @returns {Object} or null\n     */\n    this.organization = null;\n    /**\n     * @ngdoc method\n     * @name _setUser\n     * @private\n     * @description set User\n     * @methodOf UserService\n     */\n    var _setUser = function (user) {\n      self.user = user;\n    };\n    /**\n     * @ngdoc method\n     * @name getUser\n     * @description get the User\n     * @methodOf UserService\n     */\n    this.getUser = function () {\n      return this.user;\n    };\n\n    var _setRoles = function (roles) {\n      self.roles = roles;\n    };\n    /**\n     * @ngdoc method\n     * @name getRoles\n     * @description get the Roles\n     * @methodOf UserService\n     */\n    this.getRoles = function () {\n      return this.roles;\n    };\n    var _setOrganization = function (organization) {\n      self.organization = organization;\n    };\n    /**\n     * @ngdoc method\n     * @name getOrganization\n     * @description get the Organization\n     * @methodOf UserService\n     */\n    this.getOrganization = function () {\n      return this.organization;\n    };\n    /**\n     * @ngdoc method\n     * @private\n     * @name _getProperty\n     * @description get a Property by type name\n     * @methodOf UserService\n     */\n    var _getProperty = function (type, property) {\n      return self[type][property] ? self[type][property] : false;\n    };\n    /**\n     * @ngdoc method\n     * @private\n     * @name _getPropertyByObject\n     * @description get a Property by type name\n     * @methodOf UserService\n     */\n    var _getPropertyByObject = function (object, property) {\n      return object[property] ? object[property] : false;\n    };\n    /**\n     * @ngdoc method\n     * @private\n     * @name _getProperties\n     * @description get a Properties by Array<name>\n     * @methodOf UserService\n     */\n    var _getProperties = function (type, properties) {\n      if (!Array.isArray(properties)) {\n        return console.error('Properties from ' + type + 'must be a Array')\n      }\n      var temp = [];\n      properties.forEach(function (property) {\n        temp.push(_getProperty(type, property));\n      });\n      return temp;\n    };\n    /**\n     * @ngdoc method\n     * @name getUserProperty\n     * @description get the User Property\n     * @methodOf UserService\n     */\n    this.getUserProperty = function (property) {\n      return _getProperty('user', property);\n    };\n    /**\n     * @ngdoc method\n     * @name getUserProperties\n     * @description get properties from User by Array of Properties\n     * @methodOf UserService\n     */\n    this.getUserProperties = function (properties) {\n      return _getProperties('user', properties);\n    };\n    /**\n     * @ngdoc method\n     * @name getRolesProperty\n     * @description get properties from Roles by property\n     * @methodOf UserService\n     */\n    this.getRolesProperty = function (property) {\n      var roles = [];\n      this.roles.forEach(function (role) {\n        var temp = {};\n        temp[property] = _getPropertyByObject(role, property);\n        roles.push(temp);\n      });\n      return roles;\n    };\n    /**\n     * @ngdoc method\n     * @name getOrganizationProperty\n     * @description get the Organization Property\n     * @methodOf UserService\n     */\n    this.getOrganizationProperty = function (property) {\n      return _getProperty('organization', property);\n    };\n    /**\n     * @ngdoc method\n     * @name getOrganizationProperties\n     * @description get properties from Organization by Array of Properties\n     * @methodOf UserService\n     */\n    this.getOrganizationProperties = function (properties) {\n      return _getProperties('organization', properties);\n    };\n    /**\n     * @ngdoc method\n     * @name init\n     * @description initial  the Service\n     * @methodOf UserService\n     */\n    this.init = function (resp) {\n      return $q.all([\n        _setUser(resp.user),\n        _setRoles(resp.roles.roles),\n        _setOrganization(resp.organization)\n      ]);\n    };\n    /**\n     * @ngdoc method\n     * @name reset\n     * @description reset the Service\n     * @methodOf UserService\n     */\n    this.reset = function () {\n      return $q.all([\n        _setUser(null),\n        _setRoles(null),\n        _setOrganization(null)\n      ]);\n    };\n  }]\n);\n","angular.module(\"relutionClientSecurity\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"floating_labels.html\",\"<form class=\\\"login-list\\\" name=\\\"loginform\\\" ng-submit=\\\"loginC.submit(loginform)\\\" novalidate>\\n  <div class=\\\"list\\\">\\n    <label class=\\\"item item-input item-floating-label\\\">\\n      <span class=\\\"input-label\\\">{{\\'Username\\'|translate}}</span>\\n      <input type=\\\"text\\\" placeholder=\\\"{{\\'Username\\'|translate}}\\\" name=\\\"username\\\"\\n             ng-model=\\\"loginC.service.form.username.value\\\"\\n             required>\\n    </label>\\n    <label class=\\\"item item-input item-floating-label\\\">\\n      <span class=\\\"input-label\\\">{{\\'Password\\'|translate}}</span>\\n      <input type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"{{\\'Password\\'|translate}}\\\"\\n             ng-model=\\\"loginC.service.form.password.value\\\" required>\\n    </label>\\n  </div>\\n  <div class=\\\"padding\\\">\\n    <button class=\\\"button button-block button-dark\\\" ng-disabled=\\\"loginForm.$invalid\\\">{{\\'Login\\'|translate}}</button>\\n  </div>\\n</form>\\n\");\n$templateCache.put(\"inline_labels.html\",\"<form class=\\\"login-list\\\" name=\\\"loginform\\\" ng-submit=\\\"loginC.submit(loginform)\\\" novalidate>\\n  <div class=\\\"list\\\">\\n    <label class=\\\"item item-input \\\">\\n      <span class=\\\"input-label\\\">{{\\'Username\\'|translate}}</span>\\n      <input type=\\\"text\\\" name=\\\"username\\\" ng-model=\\\"loginC.service.form.username.value\\\" required>\\n    </label>\\n    <label class=\\\"item item-input \\\">\\n      <span class=\\\"input-label\\\">{{\\'Password\\'|translate}}</span>\\n      <input type=\\\"password\\\" name=\\\"password\\\" ng-model=\\\"loginC.service.form.password.value\\\" required>\\n    </label>\\n  </div>\\n  <div class=\\\"padding\\\">\\n    <button class=\\\"button button-block button-dark\\\" ng-disabled=\\\"loginForm.$invalid\\\">{{\\'Login\\'|translate}}</button>\\n  </div>\\n</form>\\n\");\n$templateCache.put(\"input_icons.html\",\"<form class=\\\"login-list\\\" name=\\\"loginform\\\" ng-submit=\\\"loginC.submit(loginform)\\\" novalidate>\\n  <div class=\\\"list\\\">\\n    <label class=\\\"item item-input \\\">\\n      <i class=\\\"icon {{loginC.icons.username}}\\\"></i>\\n      <input type=\\\"text\\\" name=\\\"username\\\" ng-model=\\\"loginC.service.form.username.value\\\" placeholder=\\\"{{\\'Username\\'|translate}}\\\" required>\\n    </label>\\n    <label class=\\\"item item-input \\\">\\n      <i class=\\\"icon {{loginC.icons.password}}\\\"></i>\\n      <input type=\\\"password\\\" name=\\\"password\\\" ng-model=\\\"loginC.service.form.password.value\\\" placeholder=\\\"{{\\'Password\\'|translate}}\\\" required>\\n    </label>\\n  </div>\\n  <div class=\\\"padding\\\">\\n    <button class=\\\"button button-block icon-left button-dark button-icon icon {{loginC.icons.login}}\\\" ng-disabled=\\\"loginForm.$invalid\\\">{{\\'Login\\'|translate}}</button>\\n  </div>\\n</form>\\n\");\n$templateCache.put(\"inset_labels.html\",\"<form class=\\\"login-list\\\" name=\\\"loginform\\\" ng-submit=\\\"loginC.submit(loginform)\\\"\\n      novalidate>\\n  <div class=\\\"list list-inset\\\">\\n    <label class=\\\"item item-input \\\">\\n      <span class=\\\"input-label \\\">{{\\'Username\\'|translate}}</span>\\n      <input  type=\\\"text\\\" name=\\\"username\\\" ng-model=\\\"loginC.service.form.username.value\\\"\\n             required>\\n    </label>\\n    <label class=\\\"item item-input \\\">\\n      <span class=\\\"input-label \\\">{{\\'Password\\'|translate}}</span>\\n      <input  type=\\\"password\\\" name=\\\"password\\\"\\n             ng-model=\\\"loginC.service.form.password.value\\\" required>\\n    </label>\\n  </div>\\n  <div class=\\\"padding\\\">\\n    <button class=\\\"button button-block button-dark\\\" ng-disabled=\\\"loginForm.$invalid\\\">{{\\'Login\\'|translate}}</button>\\n  </div>\\n</form>\\n\");\n$templateCache.put(\"placeholder_label.html\",\"<form  class=\\\"login-list\\\" name=\\\"loginform\\\" ng-submit=\\\"loginC.submit(loginform)\\\"\\n      novalidate>\\n  <div class=\\\"list\\\">\\n    <label class=\\\"item item-input \\\">\\n      <input class=\\\"royal\\\" type=\\\"text\\\" placeholder=\\\"{{\\'Username\\'|translate}}\\\" name=\\\"username\\\" ng-model=\\\"loginC.service.form.username.value\\\"\\n             required>\\n    </label>\\n    <label class=\\\"item item-input \\\">\\n      <input class=\\\"royal\\\" type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"{{\\'Password\\'|translate}}\\\"\\n             ng-model=\\\"loginC.service.form.password.value\\\" required>\\n    </label>\\n    <button class=\\\"button button-dark button-block\\\" ng-disabled=\\\"loginForm.$invalid\\\">\\n      {{\\'Login\\'|translate}}\\n    </button>\\n  </div>\\n</form>\\n\\n\");\n$templateCache.put(\"stacked_label.html\",\"<form  class=\\\"login-list\\\" name=\\\"loginform\\\" ng-submit=\\\"loginC.submit(loginform)\\\"\\n      novalidate>\\n  <div class=\\\"list\\\">\\n    <label class=\\\"item item-input item-stacked-label\\\">\\n      <span class=\\\"input-label balanced\\\">Username</span>\\n      <input class=\\\"royal\\\" type=\\\"text\\\" placeholder=\\\"John\\\" name=\\\"username\\\" ng-model=\\\"loginC.service.form.username.value\\\"\\n             required>\\n    </label>\\n    <label class=\\\"item item-input item-stacked-label\\\">\\n      <span class=\\\"input-label balanced\\\">Password</span>\\n      <input class=\\\"royal\\\" type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\"\\n             ng-model=\\\"loginC.service.form.password.value\\\" required>\\n    </label>\\n    <button class=\\\"button button-dark button-block\\\" ng-disabled=\\\"loginForm.$invalid\\\">\\n      {{\\'Login\\'|translate}}\\n    </button>\\n  </div>\\n</form>\\n\");}]);"],"sourceRoot":"/source/"}